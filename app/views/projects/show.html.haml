- @page_title = @project.name

.row-fluid
  .span10
    %ul.breadcrumb
      %li
        = link_to "Abulafia", root_path
        %span.divider /
      %li
        = link_to "Projects", projects_path
        %span.divider /
      %li
        .active
          %i.icon-leaf
          %strong
            = @project.name
          = link_to edit_project_path(@project) do |l|
            %i.icon-edit
          %span.divider /
      %li
        = link_to project_user_stories_path(@project), :class => "btn" do
          %i.icon-inbox
          Task boards
  .pull-right
    .span7
      = link_to users_list_path(@project) do |u|
        %nobr
          .badge
            %i.icon-wrench
            = @project.users.count

= form_for [@project, @task] , :remote => true do |f|
  .row-fluid
    .control-group
      .controls
        = f.text_area :title, :placeholder => "Enter draft task", :class => "span12", :rows => 7, :autocomplete =>  "off"
        = f.hidden_field :project_id, :value => @project.id
        .pull-right
          = f.button :class => "btn btn-success"
-#%p
-#  По умолчанию все задачи создаются в состоянии "Черновик". Во время редактирования можно добавить и исполнителя и один из 7 типов задачи.
-#
-#%strong #feature, #bug, #chore -
-#эти ключи в начале делают задачу с типом Фича, Баг, Работенка.
-#Пример: #bug Сделать пример использования бага или #bug, Это также работает

.sprints_show
  - if @project.current_sprint.present?
    %em
      Current sprint:
    = render @project.current_sprint
  = link_to 'All sprints', project_sprints_path(@project)
.lead
  = link_to "#", :class => "create_sprint_button" do
    %i.icon-plus
    Create sprint

  .add_sprint_form.h
    = form_for :sprint, :remote => :true, :url => project_sprints_path(@project)  do |f|
      = f.label :title
      = f.text_field :title
      = f.label :start
      = f.text_field :start_at, :data => {behaviour: 'datepicker'}, :value => Time.now.to_date
      = f.label :end
      = f.text_field :end_at, :data => {behaviour: 'datepicker'}, :value => (Time.now+1.week).to_date
      = f.label :description
      = f.text_area :desc
      %p
      = f.button :Create,  :class => "btn"

%hr/
%ul.nav.nav-pills
  %li.active
    = link_to "Discussions", "#"
  %li
    = link_to "Transactions", [@project, :transactions]
%hr/
.lead
  Discussions

-#- comments_array = []
-#- Comment.order(:created_at).each do |c|
-#  - begin
-#    - if c.commentable.discussable.project == @project
-#      - comments_array << c
-#  - rescue NoMethodError


-#TODO: pagination here

- @comments.each do |comm|
  .row-fluid.list_of_discussion_history
    .pull-right
      .row-fluid
        .avatar20.opacity40
          = user_icon(comm.user) if comm.user.present?
    .span11
      .time.pull-right
        %small
          ,
          = distance_of_time_in_words_to_now comm.created_at
      - task = comm.task
      %i.icon-comment-alt
      = link_to project_task_path(@project, task) do
        = truncate(comm.comment, :length => 50)
        .title.pull-right
          %small
            = type_icon task.task_type
            = truncate(task.title, :length => 10)

= paginate @comments

#accordion3.accordion.h
  .accordion-group
    .accordion-heading
      %a.accordion-toggle{:href => '#collapseTask', :data => {:toggle => 'collapse', :parent => '#accordion3'}}
        %i.icon-plus
        Create
    #collapseTask.accordion-body.collapse
      .accordion-inner
        = form_for [@project, @task] , :remote => true do |f|
          .row-fluid
            .control-group
              .controls
                .input-prepend
                  %span.add-on
                    %i.icon-tasks
                  = f.text_field :title, :placeholder => "Enter task", :class => "span11", :autocomplete =>  "off"


          - if @project_users.present?
            .row-fluid
              .control-group
                .controls
                  .input-prepend
                    %span.add-on
                      %i.icon-user
                    = collection_select(:task, :assigned_to, @project_users, :id, :login, :prompt => true)
          .row-fluid
            = f.hidden_field :project_id, :value => @project.id

          = f.submit "Create", {:class => "btn"}
